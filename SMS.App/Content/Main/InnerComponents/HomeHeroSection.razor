@using Blazored.LocalStorage
@using Blazored.SessionStorage
@using SMS.App.Features.Account
@using SMS.App.Features.Courses
@using SMS.App.Features.Shared.NavButton
@using SMS.App.Models
@using SMS.App.Tools
@using System.Net.Http.Headers
@implements IAsyncDisposable

@{
    string[] headings = new[]
    {
        "Elevate: Streamline Your Learning Journey",
        "Empower Educators, Engage Students, Elevate Education",
        "Connect, Learn, Elevate: Together",
        "Elevate: Where Learning Takes Flight"
    };

    string[] descriptionParagraphs = new[]
    {
        "Elevate is your all-in-one learning management system for students, educators, and institutions. Manage courses, instructors, communication, and empower everyone to achieve success.",
        "Elevate makes learning management easy and effective. Educators can create engaging courses, students can connect and collaborate, and institutions can gain valuable insights - all on one platform.",
        "Elevate brings educators, students, and admins together. Manage courses, collaborate seamlessly, and unlock a powerful learning experience for everyone.",
        "Elevate your learning management with courses, instructors, communication tools, and account management – all in one powerful, user-friendly platform."
    };

    string[] backgroundImages = new[]
    {
        "assets/img/covers/cover-4.jpg",
        "assets/img/covers/cover-1.jpg",
        "assets/img/covers/cover-21.jpg"
    };
}
<!-- HERO
================================================== -->
<section class="mt-n12">
    <div class="flickity-carousel flickity-page-dots-vertical flickity-page-dots-md flickity-page-dots-white position-static">
        @for (int i = 0; i < backgroundImages.Length; i++)
        {
            <div class="w-100">
                <div class="vh-100 bg-cover position-relative overlay overlay-custom" style="background-image: url(@backgroundImages[i])">
                    <div class="container position-static pt-9 pt-md-12 pb-8 py-lg-0">
                        <div class="mx-lg-n5">
                            <div class="vh-100 row gx-0 mx-auto">
                                <div class="col-12 mt-12 mb-4 my-md-auto text-center" style="z-index:1;">
                                    <!-- Heading -->
                                    <h1 class="display-5 fw-medium text-white mb-2 text-uppercase" data-aos="fade-left" data-aos-duration="150">
                                        @headings[i]
                                    </h1>

                                    <!-- Text -->
                                    <p class="text-white-70 text-capitalize mb-5" data-aos="fade-up" data-aos-duration="200">
                                        @descriptionParagraphs[i]
                                    </p>

                                    <!-- Buttons -->
                                    @if (_currentUser is not null)
                                    {
                                        <NavButton Style="d-inline-block" NavigatesTo="@AccountLink.AccountPanelPathRelative">
                                            <a class="btn text-white-alone btn-slide slide-white btn-wide shadow mb-4 mb-md-0 me-md-5" data-aos-duration="200" data-aos="fade-up">Continue Learning</a>
                                        </NavButton>
                                    }
                                    else
                                    {
                                        <NavButton Style="d-inline-block" NavigatesTo="@AccountLink.AccountLogin">
                                            <a class="btn text-white-alone btn-slide slide-white btn-wide shadow mb-4 mb-md-0 me-md-5" data-aos-duration="200" data- aos="fade-up">Get Started</a>
                                        </NavButton>
                                    }
                                    <NavButton Style="d-inline-block" NavigatesTo="@CoursesLink.CoursesPathRelative">
                                        <a class="btn text-white-all btn-coral btn-wide d-none d-lg-inline-block" data-aos-duration="200" data-aos="fade-up">View Courses</a>
                                    </NavButton>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="py-7 py-lg-0 mt-lg-n11 overlay-lg-none overlay overlay-primary overlay-90">
        <div class="container">
            <ul class="nav row justify-content-evenly">
                <li class="col-lg-auto mb-5 mb-lg-0 nav-item">
                    <div class="d-flex align-items-center">
                        <div class="me-4 text-white icon-md">
                            <!-- Icon -->
                            <svg width="60" height="61" viewBox="0 0 60 61" xmlns="http://www.w3.org/2000/svg">
                                <path d="M55.1953 31.7109C57.8842 31.4375 60 28.8389 60 25.6822V6.84812C60 3.51005 57.6343 0.794312 54.7266 0.794312H37.2656C34.3579 0.794312 31.9922 3.51005 31.9922 6.84812V14.7853H10.0781C7.17035 14.7853 4.80469 17.5011 4.80469 20.8392V45.0544C4.80469 45.7618 4.91191 46.4407 5.10703 47.0723H3.16406C1.41938 47.0723 0 48.7018 0 50.7046C0 56.2681 3.94277 60.7943 8.78906 60.7943H51.2109C56.0572 60.7943 60 56.2681 60 50.7046C60 48.7018 58.5806 47.0723 56.8359 47.0723H54.893C55.0881 46.4407 55.1953 45.7618 55.1953 45.0544V31.7109ZM35.5078 6.84812C35.5078 5.73543 36.2964 4.83019 37.2656 4.83019H54.7266C55.6958 4.83019 56.4844 5.73543 56.4844 6.84812V25.6822C56.4844 26.7949 55.6958 27.7001 54.7266 27.7001H38.4375C38.108 27.7001 37.7852 27.8064 37.5059 28.0069L33.9616 30.5499L35.4338 24.9167C35.4829 24.7287 35.5078 24.5333 35.5078 24.3369V6.84812ZM51.2109 56.7584H8.78906C5.99941 56.7584 3.70887 54.2588 3.52723 51.1082H56.4728C56.2911 54.2588 54.0006 56.7584 51.2109 56.7584ZM16.7578 31.8705C16.7578 30.6095 17.6515 29.5835 18.75 29.5835C19.8485 29.5835 20.7422 30.6095 20.7422 31.8705C20.7422 33.1316 19.8485 34.1575 18.75 34.1575C17.6515 34.1575 16.7578 33.1316 16.7578 31.8705ZM15.8203 40.4804C15.8203 39.2621 17.1893 38.1934 18.75 38.1934C19.587 38.1934 20.3933 38.4931 20.9624 39.0158C21.2304 39.2618 21.6797 39.7792 21.6797 40.4804V47.0723H15.8203V40.4804ZM25.1953 47.0723V40.4804C25.1953 38.7356 24.453 37.053 23.1586 35.8643C23.1295 35.8375 23.0992 35.8125 23.0696 35.7864C23.8126 34.7086 24.2578 33.3485 24.2578 31.8705C24.2578 28.3841 21.787 25.5477 18.75 25.5477C15.713 25.5477 13.2422 28.3841 13.2422 31.8705C13.2422 33.3502 13.6884 34.7115 14.4328 35.7899C13.1269 36.9478 12.3047 38.6216 12.3047 40.4804V47.0723H10.0781C9.10887 47.0723 8.32031 46.1671 8.32031 45.0544V20.8392C8.32031 19.7265 9.10887 18.8212 10.0781 18.8212H31.9922V24.0408L30.5943 29.3901C30.1697 31.0147 30.6543 32.7294 31.8288 33.7583C32.4615 34.3125 33.2084 34.5926 33.9587 34.5926C34.6014 34.5926 35.2467 34.387 35.8247 33.9723L38.9416 31.736H51.6797V45.0544C51.6797 46.1671 50.8911 47.0723 49.9219 47.0723H25.1953Z" fill="currentColor" />
                                <path d="M47.8125 19.0903H44.0625C43.0917 19.0903 42.3047 19.9936 42.3047 21.1078C42.3047 22.222 43.0917 23.1253 44.0625 23.1253H47.8125C48.7833 23.1253 49.5703 22.222 49.5703 21.1078C49.5703 19.9936 48.7833 19.0903 47.8125 19.0903Z" fill="currentColor" />
                                <path d="M41.25 13.4403H50.625C51.5958 13.4403 52.3828 12.5367 52.3828 11.4223C52.3828 10.3078 51.5958 9.4043 50.625 9.4043H41.25C40.2792 9.4043 39.4922 10.3078 39.4922 11.4223C39.4922 12.5367 40.2792 13.4403 41.25 13.4403Z" fill="currentColor" />
                            </svg>

                        </div>
                        <div class="media-body">
                            <h4 class="text-white mb-0 text-uppercase">
                                @(_coursesCall.IsFailed || _coursesCall.Data is null ? "Tens of" : _coursesCall.Data?.Count())
                                online courses</h4>
                            <p class="text-white mb-0">Explore a variety of fresh topics</p>
                        </div>
                    </div>
                </li>

                <li class="col-lg-auto mb-5 mb-lg-0 nav-item">
                    <div class="d-flex align-items-center">
                        <div class="me-4 text-white icon-md">
                            <!-- Icon -->
                            <svg width="60" height="61" viewBox="0 0 60 61" xmlns="http://www.w3.org/2000/svg">
                                <path d="M58.2422 56.9639H50.5078V39.7373C50.5078 37.7988 48.9307 36.2217 46.9922 36.2217H44.3787C43.69 33.2171 42.319 30.6373 40.3639 28.6993C39.1335 27.4795 37.7029 26.5474 36.1162 25.9203C39.5169 22.9862 41.7363 17.9138 41.7363 13.331C41.7363 9.17223 40.5795 5.9082 38.2979 3.62996C36.2341 1.56887 33.3648 0.479492 30 0.479492C26.6353 0.479492 23.7659 1.56887 21.702 3.62996C19.4204 5.9082 18.2636 9.17223 18.2636 13.331C18.2636 17.9137 20.483 22.9862 23.8836 25.9203C22.2971 26.5474 20.8665 27.4795 19.6361 28.6993C17.681 30.6373 16.31 33.2172 15.6214 36.2217H13.0078C11.0693 36.2217 9.49219 37.7988 9.49219 39.7373V56.9639H1.75781C0.787031 56.9639 0 57.7509 0 58.7217C0 59.6925 0.787031 60.4795 1.75781 60.4795H58.2422C59.213 60.4795 60 59.6925 60 58.7217C60 57.7509 59.213 56.9639 58.2422 56.9639ZM30 3.99512C32.5816 3.99512 36.6335 4.85328 37.8581 9.95539C36.0666 9.72758 35.0435 9.22145 34.2428 8.82523C33.4579 8.43688 32.5682 7.9966 31.4824 8.24551C30.6011 8.44754 29.9709 8.94477 29.3617 9.4257C28.2513 10.3021 26.6303 11.5788 21.8426 11.8373C22.4387 5.05648 27.1288 3.99512 30 3.99512ZM21.9562 15.3515C27.9266 15.0371 30.1566 13.2773 31.54 12.1852C31.7402 12.027 31.998 11.8237 32.1577 11.7263C32.2987 11.7859 32.507 11.8889 32.6837 11.9763C33.7166 12.4873 35.3384 13.2894 38.2163 13.5247C38.1703 16.113 37.2081 18.9837 35.6179 21.2456C33.995 23.5539 31.9473 24.8779 30 24.8779C28.0527 24.8779 26.005 23.5539 24.382 21.2456C23.1592 19.5062 22.3061 17.4061 21.9562 15.3515ZM29.0625 28.4873H30.9375C35.8158 28.4873 39.3743 31.3396 40.755 36.2217H19.245C20.6257 31.3396 24.1842 28.4873 29.0625 28.4873ZM13.0078 56.9639V39.7373H46.9922V56.9639H13.0078Z" fill="currentColor" />
                                <path d="M30 49.1115C30.9708 49.1115 31.7578 48.3246 31.7578 47.3539C31.7578 46.3832 30.9708 45.5963 30 45.5963C29.0292 45.5963 28.2422 46.3832 28.2422 47.3539C28.2422 48.3246 29.0292 49.1115 30 49.1115Z" fill="currentColor" />
                            </svg>

                        </div>
                        <div class="media-body">
                            <h4 class="text-white mb-0 text-uppercase">Expert instruction</h4>
                            <p class="text-white mb-0">Find the right instructor for you</p>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</section>

@code {
    [Inject] public IJSRuntime JsInterop { get; set; } = default!;
    [Inject] public HttpClient Api { get; set; } = default!;
    [Inject] public ISessionStorageService SessionStorage { get; set; } = default!;
    [Inject] public ILocalStorageService LocalStorage { get; set; } = default!;
    [Inject] public NavigationManager NavManager { get; set; } = default!;

    private IJSObjectReference? FlickityModule;
    private CallResult<IEnumerable<CourseDto>> _coursesCall = new();
    private CallResult<AppUser> _currentUserCall = new();
    private AppUser? _currentUser;

    protected override async Task OnInitializedAsync()
    {
        await _coursesCall.DiagnoseAsync(await Api.GetAsync("/api/courses/all"));

        _currentUser = await SessionStorage.GetItemAsync<AppUser>("current-user")
                    ?? await LocalStorage.GetItemAsync<AppUser>("current-user");

        if (_currentUser is null)
        {
            var token = await SessionStorage.GetItemAsStringAsync("token")
                     ?? await LocalStorage.GetItemAsStringAsync("token");

            if (token is not null)
            {
                Api.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
                await _currentUserCall.DiagnoseAsync(await Api.GetAsync("/api/auth/current-user"));
            }

            if (_currentUserCall.IsFailed is false)
            {
                _currentUser = _currentUserCall.Data!;
            }
        } 
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        FlickityModule = await JsInterop.InvokeAsync<IJSObjectReference>("import", "./Content/Main/InnerComponents/HomeHeroSection.razor.js");

        await FlickityModule.InvokeVoidAsync("flickityInit");
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (FlickityModule is not null)
            await FlickityModule.DisposeAsync();
    }
}
