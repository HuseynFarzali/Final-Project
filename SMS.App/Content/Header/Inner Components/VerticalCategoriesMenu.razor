@using SMS.App.Features.Categories
@using SMS.App.Features.Shared.DropButton
@using SMS.App.Features.Shared.DropDownMenu
@using SMS.App.Features.Shared.NavButton
@using SMS.App.Models
@using SMS.App.Tools
<!-- Vertical Menu -->
<ul class="navbar-nav navbar-vertical ms-xl-4 d-none d-xl-flex">
    <li class="nav-item dropdown">
        <DropButton Style="nav-link pb-4 mb-n4 px-0 pt-0" DropId="navbarVerticalMenu">
            <div class="bg-white rounded py-3 px-4 d-flex align-items-center">
                <div class="me-3 ms-1 d-flex text-primary">
                    <!-- Icon -->
                    <svg width="25" height="17" viewBox="0 0 25 17" xmlns="http://www.w3.org/2000/svg">
                        <rect width="25" height="1" fill="currentColor" />
                        <rect y="8" width="15" height="1" fill="currentColor" />
                        <rect y="16" width="20" height="1" fill="currentColor" />
                    </svg>

                </div>
                <span class="text-primary fw-medium me-1">CATEGORIES</span>
            </div>
        </DropButton>

        <DropDownMenu Style="dropdown-menu dropdown-menu-md bg-white rounded py-4 mt-4" TriggerDropButtonId="navbarVerticalMenu">
            @if (_categoriesCall.IsFailed is false)
            {
                if (_categoriesCall.Processing)
                {
                    <li class="dropdown-item dropright">
                        <span class="text-info">Loading...</span>
                    </li>
                }
                else
                {
                    if (_categoriesCall.Data is not null || _categoriesCall.Data!.Count() != 0)
                    {
                        foreach (var category in _categoriesCall.Data!)
                        {
                            <li class="dropdown-item dropright">
                                <NavButton Style="dropdown-link dropdown-toggle" NavigatesTo="@CategoriesLink.CategoriesPathRelative" WithRouteData="@("/" + category.Id)">
                                    @category.Name
                                </NavButton>
                            </li>
                        }
                    }
                }
            }
            else
            {
                <li class="dropdown-item dropright">
                    <span class="text-danger">Problem occured.</span>
                </li>
            }
        </DropDownMenu>
    </li>
</ul>

@code {
    [Inject] public HttpClient Api { get; set; } = default!;

    private CallResult<IEnumerable<CategoryDto>> _categoriesCall = new();

    protected override async Task OnInitializedAsync()
    {
        await _categoriesCall.DiagnoseAsync(await Api.GetAsync("/api/categories/all"));
    }
}
